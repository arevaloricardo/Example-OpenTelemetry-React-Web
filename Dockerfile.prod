# Dockerfile optimizado para Dokploy
FROM oven/bun:1 AS base
WORKDIR /usr/src/app

# Instalar dependencias
FROM base AS install
COPY package.json bun.lock ./
RUN bun install --frozen-lockfile

# Build de la aplicaci贸n
FROM base AS build
COPY --from=install /usr/src/app/node_modules node_modules
COPY . .

# Variables de entorno para el build
ENV NODE_ENV=production

# Build de la aplicaci贸n
RUN bun run build

# Servir con nginx
FROM nginx:alpine AS release

# Instalar curl para health checks
RUN apk add --no-cache curl

# Copiar archivos construidos
COPY --from=build /usr/src/app/dist /usr/share/nginx/html

# Configuraci贸n de nginx optimizada para producci贸n
COPY nginx.conf /etc/nginx/nginx.conf

# Health check para Dokploy
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

# Labels para metadata
LABEL maintainer="ricardo@alineadoos.com"
LABEL description="React Frontend with Vite, Bun and TanStack Router"

# Exponer puerto 80
EXPOSE 80

# Usuario no-root para seguridad
RUN addgroup -g 1001 -S appgroup && \
    adduser -S appuser -u 1001 -G appgroup && \
    chown -R appuser:appgroup /usr/share/nginx/html /var/cache/nginx /var/log/nginx /etc/nginx/conf.d

USER appuser

# Comando por defecto
CMD ["nginx", "-g", "daemon off;"]
